@model IEnumerable<Education.DAL.LearningInfo>
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section plugincss{
    <link href="~/Areas/Admin/Content/assets/plugins/datatables/datatables.min.css" rel="stylesheet" />
}

<div class="page-header">
    <div class="row align-items-center">
        <div class="col">
            <h3 class="page-title">Learning Info</h3>
            <ul class="breadcrumb">
                <li class="breadcrumb-item"><a href="index.html">Dashboard</a></li>
                <li class="breadcrumb-item active">Learning Info</li>
            </ul>
        </div>
        <div class="col-auto text-right float-right ml-auto">
            @using (Html.BeginForm("ImportData", "LearningInfo", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.Raw(ViewBag.Info)<br />
                <span>Excel File</span>
                <input type="file" name="excelFile" />
                <button type="submit" class="btn btn-success">Import</button>
            }
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <div class="card card-table">
            <div class="card-body">
                <input type="text" placeholder="Search" id="search-batch" class="search form-control mb-3">
                <div class="table-responsive">
                    <table class="table table-hover table-center mb-0 datatable">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.Candicate)</th>
                                <th>@Html.DisplayNameFor(model => model.ClassRoom)</th>
                                <th>@Html.DisplayNameFor(model => model.Exam)</th>
                                <th>@Html.DisplayNameFor(model => model.Tuition)</th>
                                <th>@Html.DisplayNameFor(model => model.TuitionPaid)</th>
                                <th>@Html.DisplayNameFor(model => model.Point)</th>
                                <th>@Html.DisplayNameFor(model => model.Number)</th>
                                <th>@Html.DisplayNameFor(model => model.Status)</th>
                                <th>@Html.DisplayNameFor(model => model.User)</th>
                                <th>@Html.DisplayNameFor(model => model.CreatedAt)</th>
                                <th>@Html.DisplayNameFor(model => model.UpdatedAt)</th>
                                <th class="text-right">Action</th>
                            </tr>
                        </thead>
                        <tbody class="load-learning-info">
                            @foreach (var item in Model)
                            {
                        <tr>
                            <td> @Html.DisplayFor(modelItem => item.Candicate.Name)</td>
                            <td>
                                <h2 class="table-avatar">
                                    <a href="/Admin/LearningInfo/Details/@Html.DisplayFor(modelItem => item.Id)"> @Html.DisplayFor(modelItem => item.ClassRoom.Name)</a>
                                </h2>
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.Exam.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.Tuition)</td>
                            <td>@Html.DisplayFor(modelItem => item.TuitionPaid)</td>
                            <td>@Html.DisplayFor(modelItem => item.Point)</td>
                            <td>@Html.DisplayFor(modelItem => item.Number)</td>
                            <td>@Html.DisplayFor(modelItem => item.Status)</td>
                            <td>@Html.DisplayFor(modelItem => item.User.FullName)</td>
                            <td>@Html.DisplayFor(modelItem => item.CreatedAt)</td>
                            <td>@Html.DisplayFor(modelItem => item.UpdatedAt)</td>
                            <td class="text-right">
                                <div class="actions">
                                    <a href="/Admin/Faulties/Edit/@Html.DisplayFor(modelItem => item.Id)" class="btn btn-sm bg-success-light mr-2">
                                        <i class="fas fa-pen"></i>
                                    </a>
                                    <a href="#" class="btn btn-sm btn-warning btn-remove" data-id="@item.Id">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@section pluginjs{
    <script src="~/Areas/Admin/Content/assets/plugins/datatables/datatables.min.js"></script>
}
@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script>
        var manageLearningInfo = {
            load: function (CurrentPage = 1, Limit = 10, Key = null) {
                $.ajax({
                    type: "GET",
                    url: "/Admin/LearningInfo/GetData",
                    data: { CurrentPage: CurrentPage, Limit: Limit, Key: Key },
                    success: function (res) {
                        res.data = JSON.parse(res.data);
                        html = '';
                        for (let item of res.data) {
                            let createAt = moment(item.CreatedAt).format('DD-MM-YYYY');
                            let updateAt = '';
                            let Exam = '';
                            if (item.Exam != null) {
                                Exam = item.Exam.Name;
                            } else {
                                Exam = 'Not yet made';
                            }
                            if (item.UpdatedAt != null) {
                                updateAt = moment(item.UpdatedAt).format('DD-MM-YYYY');
                            } else {
                                updateAt = 'Not update';
                            }
                            let Tuition = new Intl.NumberFormat('en-US', {
                                style: 'currency',
                                currency: 'USD'
                            }).format(item.Tuition);
                            let TuitionPaid = new Intl.NumberFormat('en-US', {
                                style: 'currency',
                                currency: 'USD'
                            }).format(item.TuitionPaid);
                            html += `<tr>
                                                        <td>${item.Candicate.Name}</td>
                                                        <td><a href="/Admin/LearningInfo/Details/${item.Id}">${item.ClassRoom.Name}</a></td>
                                                        <td>${Exam}</td>
                                                        <td>${Tuition ?? 0}</td>
                                                        <td>${TuitionPaid ?? 0}</td>
                                                        <td>${item.Point ?? ''}</td>
                                                        <td>${item.Number ?? ''}</td>
                                                        <td>${item.Status == 1 ? "Join the class" : "Change class"}</td>
                                                        <td>${item.User.FullName}</td>
                                                        <td>${createAt}</td>
                                                        <td>${updateAt}</td>
                                                        <td class="text-right">
                                                            <div class="actions">
                                                                <a href="/Admin/LearningInfo/Edit/${item.Id}" class="btn btn-sm bg-success-light mr-2">
                                                                    <i class="fas fa-pen"></i>
                                                                </a>
                                                                <a class="btn btn-sm btn-warning btn-remove" data-id="${item.Id}">
                                                                    <i class="fas fa-trash"></i>
                                                                </a>
                                                            </div>
                                                        </td>
                                                    </tr>`;
                        }
                        let paginate = '';
                        if (res.paginate.CurrentPage == 1) {
                            paginate += `<li class="paginate_button page-item previous disabled" id="DataTables_Table_0_previous">
                                                            <a href="javascript:void(0)" aria-controls="DataTables_Table_0" class="page-link">Previous</a>
                                                        </li>`;
                        } else {
                            paginate += `<li class="paginate_button page-item previous page-previous" id="DataTables_Table_0_previous">
                                                            <a href="javascript:void(0)" aria-controls="DataTables_Table_0" data-id="${res.paginate.CurrentPage - 1}" class="page-link page">Previous</a>
                                                        </li>`;
                        }
                        for (var i = 1; i <= res.paginate.TotalPage; i++) {
                            if (i == res.paginate.CurrentPage) {
                                paginate += `<li class="paginate_button page-item active">
                                                            <a href="javascript:void(0)" data-id="${i}" aria-controls="DataTables_Table_0" class="page-link current-page">${i}</a>
                                                        </li>`;
                            } else {
                                paginate += `<li class="paginate_button page-item">
                                                            <a href="javascript:void(0)" aria-controls="DataTables_Table_0" data-id="${i}" class="page-link page">${i}</a>
                                                        </li>`;
                            }
                        }
                        if (res.paginate.CurrentPage == res.paginate.TotalPage) {
                            paginate += `<li class="paginate_button page-item next disabled" id="DataTables_Table_0_next">
                                                            <a href="javascript:void(0)" aria-controls="DataTables_Table_0" class="page-link">Next</a>
                                                        </li>`;
                        } else {
                            paginate += `<li class="paginate_button page-item next page-next" id="DataTables_Table_0_next">
                                                            <a href="javascript:void(0)" aria-controls="DataTables_Table_0" data-id="${res.paginate.CurrentPage + 1}" class="page-link page">Next</a>
                                                        </li>`;
                        }
                        $(".load-learning-info").html(html);
                        $(".pagination").html(paginate);
                    }
                })
            },
            delete: function (id, limit, key, currentPage) {
                $.ajax({
                    type: "GET",
                    url: "/Admin/LearningInfo/Remove",
                    data: { id: id },
                    success: function (data) {
                        if (data.StatusCode == 200) {
                            alert(data.message);
                            manageLearningInfo.load(currentPage, limit, key);
                        } else {
                            alert(data.message);
                        }
                    }
                })
            }
        }
        $(function () {
            manageLearningInfo.load();
            $(".custom-select").change(function () {
                let limit = $(".custom-select").val();
                let key = $("#search-batch").val();
                manageLearningInfo.load(1, limit, key);
            });
            $(document).on("click", ".page", function () {
                let page = $(this).data("id");
                let limit = $(".custom-select").val();
                let key = $("#search-batch").val();
                manageLearningInfo.load(page, limit, key);
            })
            $("#search-batch").keyup(function () {
                let limit = $(".custom-select").val();
                let key = $("#search-batch").val();
                manageLearningInfo.load(1, limit, key);
            })
            $(document).on("click", ".btn-remove", function () {
                let id = $(this).data("id");
                let limit = $(".custom-select").val();
                let key = $("#search-batch").val();
                manageLearningInfo.delete(id, limit, key, 1);
            })
        })
    </script>
}

